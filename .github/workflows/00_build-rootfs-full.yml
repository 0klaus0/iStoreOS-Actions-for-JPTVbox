name: 📦 00_build-rootfs-full

on:
  workflow_dispatch:
    inputs:
      include_docker:
        description: |
          是否编译 Docker 插件
        required: true
        default: 'yes'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set executable permissions
      run: | 
        chmod +x arm64/build24.sh
        chmod +x shell/*.sh
        
        
    - name: ⚙️ 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev zstd curl unzip tree
      
    - name: ⏬ 下载 ImageBuilder
      run: |
        curl -L -o imagebuilder.tar.zst https://github.com/Kwonelee/fenliu/releases/download/rootfs/istoreos-imagebuilder-24.10.2-armsr-armv8.Linux-x86_64.tar.zst
        tar --use-compress-program=unzstd -xvf imagebuilder.tar.zst
        mv istoreos-imagebuilder-* imagebuilder
        
    
    - name: ⏬ 复制必备文件
      run: |
        cp arm64/build24.sh imagebuilder/
        cp arm64/Makefile imagebuilder/
        #cp arm64/repositories.conf imagebuilder/
        cp shell/prepare-packages.sh imagebuilder/
        cp shell/custom-packages.sh imagebuilder/
        cp files/etc/packages/*.ipk imagebuilder/packages/
        mkdir -p imagebuilder/files/etc/uci-defaults
        cp files/etc/uci-defaults/99-custom.sh imagebuilder/files/etc/uci-defaults/
        #mkdir -p imagebuilder/files/etc/opkg
        #cp files/etc/opkg/distfeeds.conf imagebuilder/files/etc/opkg/
        mkdir -p imagebuilder/files/etc/banner1
        cp files/etc/banner imagebuilder/files/etc/banner1/
        cd imagebuilder
        echo "启用rootfs.tar.gz配置并停用非必要配置"
        sed -i 's/# CONFIG_TARGET_ROOTFS_TARGZ is not set/CONFIG_TARGET_ROOTFS_TARGZ=y/' .config
        sed -i "s|CONFIG_TARGET_ROOTFS_SQUASHFS=.*|# CONFIG_TARGET_ROOTFS_SQUASHFS is not set|g" .config
        sed -i "s|CONFIG_TARGET_IMAGES_GZIP=.*|# CONFIG_TARGET_IMAGES_GZIP is not set|g" .config
        echo "打印action目录结构"
        tree -L 1

    - name: 🧱 构建iStoreOS-rootfs
      working-directory: ./imagebuilder
      run: |
        echo "打印imagebuilder目录结构"
        tree -L 1
        echo "打印repositories"
        cat repositories.conf
        echo "打印Makefile"
        cat Makefile |grep here
        bash ./build24.sh

    - name: 📦 打印产出rootfs
      run: |
        echo "打印bin目录"
        ls -lah imagebuilder/bin/targets/armsr/armv8/

    - name: 🚀 上传到 Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: iStoreOS-rootfs-full
        files: |
          imagebuilder/bin/targets/armsr/armv8/*generic-rootfs.tar.gz
        token: ${{ secrets.GH_TOKEN }}
      env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

